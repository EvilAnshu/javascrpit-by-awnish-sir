What is Functions :-
******************

1. It is block of code executing some secific logic , repeatedly
or
it is a block of code which perform some specific Task. , repeatedly
function is some as Achaar(pickel).

Why Functions
*************
1. Let us consider, functionality Add Application/SW
you need to verify otp verification.

app-1
app-2
app-3
app-4
app-5

Every app, feature is requirement
option 1 => some code otp verification copy + paste
Option 2 => make a function when every required import, include, use them.

Ans. Option 2

Why ??
Due to Modularity.
Programming are of two types
1. Monolythic(Procedural) : Every code in single file
2. Polythic : Code at different files and one file can use another file if required.

Polythic classifications:-
*************************
1. OOPs Based: (we make classes)
2. Functional Based: (we make functions)
3. Modular Based: (node every file is a module)
Python program is also module

Functions Context:-
*****************
1. Calling Context : using a function , call (Achar Khana)
2. Definition Context : making a function , (definition of function)

Order of Context:-
*****************
1. Definition Context
2. Calling Context

Function Input and Output:-
*************************
Mathematical Terms, what is function f(x)
y=f(x)

y=4x
y=? when x=2 => y=8
y depend on x

function classification on the basis of use
*******************************************
1. Predefined
2. Userdefined

Note: Every Predefined is first time userdefined.
printf => predefined user but Dennis Ritchtie => userdefined
Eg : servicing => Already person => do this
he Know how to work

a)No Argument No Return Type
**************************
1. Definition Context:-
********************
	function sayHello()
	{
		console.log("Say Hello");
	}
	
2. Calling:-
***********
	void()
	sayHello()
	

b)No Argument But Return Type
***************************
1. Definition Context:-
********************
	function sayHello()
	{
		return ("Say Hello");
	}
	
2. Calling:-
***********
	var x=sayHello()
	console.log(x);
	

c)With Argument But No Return Type
***************************
1. Definition Context:-
********************
	function sayHello(name)
	{
		console.log("Hello "+name);
	}
	
2. Calling:-
***********
	sayHello("anshu")
	
d)Argument With Return Type
***************************
1. Definition Context:-
********************
	function sayHello(name)
	{
		return ("Hello "+name);
	}
	
2. Calling:-
***********
	var x=sayHello(name)
	console.log(x);
	
	
	
	
===================================================================
DAY 2
===================================================================

Local scope & Global scope
***************************
Scope means :- it is the region, Area upto which value of a variable, function, method, object can be obtained.

it is a part/block of the code upto which value of a variable, method, function, object can be found.
var a=20;
function demo()
{
	console.log("inside local scope of function a= ",a);
	console.log("inside local scope of function b= ",b);
}

demo();

console.log("inside local scope of function a= ",a);
console.log("inside local scope of function b= ",b);

Question :-

this.a === window.a
true
a==this
true
a==window.a
true
window.a === this.a === a
false

true === a
true === 20
false



type of this:-
*************
global object : scope global type :object

typeof(window)
object	

Note :: null is object of global Scope
Note :: undefined is a string datatype


Difference B/w arrow function Normal Functions
**********************************************
1. Normal Function Points to the different scope of the other function when referred with this.
	for ex:- 
		function demo()
		{
			console.log(this); //point other function like setTimeout or setInterval.
		}
		demo = () =>
		{
			console.log(this); //point to same object as earlier as earlier => Global Empty
		}

Anonymous function are called as inline functions:-
And they donot have a name, they cannot be called directly.
rether than they are assigned to a variable and that variable used as a reference.

what is grouping operator ?
***************************
(function definition)();

This is called IIFE : immediatly invoked(calling) function Execution.

()() => coupled operator or grouping operator.
|  | 
|  calling Context
Definition Context



Storage in the Browser:-
**********************
Consider a program, having few variable,
with some data, then data here will have a scope till, the VM
(Virtual Machine is running.)


var name="anshu";
console.log(name);

C language:-
***********
int a;
printf("Enter the value of a:");
scanf("%d",&a);
printf("value of a = : %d",a);


In order to make data permanent we need some kind storage mechanism. data we can store today use them later on, for analysis, reporting, and future scope.

classification of data

1. Data : any information that can be stored data.
Abc is a data ..No
ram@gmail.com ..YES

Note: Data depends on use case.

Classification is given bellow:-
	1. File System
		1. txt data	eg: html, json, .txt files
		2. Binary Data  eg: audio, video, excel, pdf,...MsDoc, Dcox, Bson

		limited data.
		
	2. Data Store in form excels.
		1 Lakh Rows.
		
	3. Database management System:-
		sensitive data, data security, data transaction, Bandwith data change, Database Management System
		
	4. Data Structure:-
		Large Amount of data, Organise
	
	5. Data ware housing:-
		Large amount of data, in physical device.
		
	6. Big Data (3V) or cloud
		
Data storage in web development

1. Client side data storage
	1. cookie
	2. IndexDB
	3. localStorage
	4. Cache Memory
	5. webSQL
	
	Browser > ctrl+shift+i  (dev tools) > 
	Element | Console | Source | Application | Network
		|		js		  |			storage		  | Api, Ajax, Webservice
	   Dom				  |			Application,settings
	   Virtual			cdn or local files
	   Real
	   
2. Server side data storage
	1. session 
	2. cloud Database (mongodb, oracle, redis,....)
	
Local Storage:-
*************
	it is a permanent data storage. it will remain till browser remain.
	Form of DataStructure :- Array of Object
	
	+-------------------------------+
	| key | value (array of object) |
	+-------------------------------+
	| std | [{},{},{},{},{},{},{}]  |
	+-------------------------------+
	| tcr | [{},{},{},{},{},{},{}]  |
	+-------------------------------+
	
	methods of local storage
	************************
	
	Window Object => LocalStorage
	
	window.localStorage()
	storage{key : value}
	
	std=[
		{name : "ravi", roll:1001, class:"12th"},
		{name : "ram", roll:1002, class:"10th"},
		{name : "shyam", roll:1003, class:"11th"},
	];
	
	How to set the data in local Storage:-
	*************************************
	window.localStorage.setItem('std_data', std);
	
	Problem:-
	*********
	
	std_data : [Object,Object]
	localStorage only accept in string format.
	
	Encoding and Decodig:-
	Serialisization and De-Serialisization
	**************************************
	change original data to Anoter format : Encoding(Serialisization)
	getting back another form of data to Original form is called as Decodig (De-Serialisization)

	typeof(std)=> Object
	localStorage => string
	
	window.localStorage.setItem('name',"ravi");
	
	name: "ravi"
	How to Convert Object into string
	**********************************
	Array of object :JSON object => Input 
	String : JSON string => Output
	
	Json.stringify()
	
	How to convert string into object
	*********************************
	Array of object :Json Object => Object
	String : Json String => input 
	
	JSON.parse()
	
	How to set data in local storage using Encoding:-
	************************************************
	
	window.localStorage.setItem('std_data' : JSON.stringify(std))
	
	"std=[
		{name : "ravi", roll:1001, class:"12th"},
		{name : "ram", roll:1002, class:"10th"},
		{name : "shyam", roll:1003, class:"11th"},
	]"
	
	How to get data in local Storage using decoding:-
	************************************************
	
	var data = window.localStorage.getItem('std_data')
	typeof(data)  =>string 
	
	var data = JSON.parse(window.localStorage.getItem('std_data'));
	typeof(data) => Object
	
	How to remove Item or data
	**************************
	window.localStorage.removeItem('key')
	
	How to remove value from a key
	******************************
	window.localStorage.setItem('key',null);
	
	How to remove all Data 
	**********************
	window.localStorage.clear();
	




















